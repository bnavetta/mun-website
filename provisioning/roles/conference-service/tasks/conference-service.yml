---

# This role only sets up the infrequently-changing parts of the conference, not things that change on
# every deploy

- name: Ensure {{ conference.name }} user exists
  user:
    name: "{{ conference.name }}"
    uid: "{{ conference.user_id }}"
    groups: [docker, gcp]
    create_home: yes
    state: present

- name: Ensure default .bash_logout is absent
  file:
    path: /home/{{ conference.name }}/.bash_logout
    state: absent

- name: Ensure the Docker GCR credential helper is configured
  command: docker-credential-gcr configure-docker
  args:
    creates: /home/{{ conference.name }}/.docker/config.json
  become_user: "{{ conference.name }}"

- name: Ensure the {{ conference.name }} user has access to GCR credentials
  copy:
    src: gcp_credentials.json
    dest: /home/{{ conference.name }}/.config/gcloud/application_default_credentials.json
    owner: "{{ conference.name }}"
    group: "{{ conference.name }}"
    mode: 0600

- name: Configure the systemd service for {{ conference.name }}
  template:
    src: conference.service.j2
    dest: /etc/systemd/system/{{ conference.name }}.service
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
    - restart backend

# Don't actually copy over any configuration, since
# that's done by the deploy play
- name: Ensure {{ conference.name }} configuration directory exists
  file:
    path: /etc/{{ conference.name }}
    state: directory
    owner: "{{ conference.name }}"
    mode: 0755

- name: Ensure {{ conference.name }} backend is running
  service: name={{ conference.name }} state=started enabled=yes
  