import org.springframework.boot.gradle.tasks.run.BootRun;

buildscript {
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.2.RELEASE'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.17.0'
        classpath 'com.diffplug.spotless:spotless-plugin-gradle:3.10.0'
        classpath 'net.ltgt.gradle:gradle-apt-plugin:0.15'
    }
}

plugins {
    id 'org.hidetake.ssh' version '2.9.0'
    id 'org.ajoberstar.grgit' version '2.1.1'
}

def computeVersion() {
    if (project.hasProperty('stableVersion')) {
        return 'latest';
    }

    def head = grgit.head().abbreviatedId
    def status = grgit.status()
    def changes = status.staged.allChanges + status.unstaged.allChanges
    if (changes.empty) {
        return head
    } else {
        return "${head}-dirty"
    }
}

def currentVersion = computeVersion()

allprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    version = currentVersion
}

idea {
    project {
        vcs = 'Git'
    }
}

configure([':web', ':busun', ':bucs', ':core', ':cli'].collect { project(it) }) {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'com.diffplug.gradle.spotless'
    apply plugin: 'net.ltgt.apt-idea'

    group = 'org.brownmun'

    sourceCompatibility = 1.10
    targetCompatibility = 1.10

    dependencyManagement {
        dependencies {
            dependency 'com.google.guava:guava:23.6-jre'
            dependency 'org.springframework.shell:spring-shell-starter:2.0.0.M2'
            dependency 'org.javassist:javassist:3.22.0-GA'
            dependency 'com.googlecode.libphonenumber:libphonenumber:8.9.2'
            dependency 'io.sentry:sentry-spring:1.7.3'
            dependency 'de.vandermeer:asciitable:0.3.2'

            dependencySet(group: 'com.google.auto.value', version: '1.6rc1') {
                entry 'auto-value'
                entry 'auto-value-annotations'
            }

            // Override for Java 10 support
            dependency 'org.hibernate:hibernate-jpamodelgen:5.3.0.Final'
        }
    }

    repositories {
        jcenter()
    }

    tasks.withType(BootRun) {
        workingDir rootProject.projectDir
    }

    spotless {
        java {
            importOrder 'java', 'javax', 'org', 'com', 'org.brownmun', ''
            removeUnusedImports()
            eclipse().configFile rootProject.file('config/eclipse-formatter-settings.xml')
            trimTrailingWhitespace()
            endWithNewline()
        }
    }
}

remotes {
    brownmun {
        role 'website'
        host = '104.196.62.13'
        // TODO: make more generic
        user = 'ben'
        identity = file("${System.getProperty("user.home")}/.ssh/google_compute_engine")
    }
}

task deploy(dependsOn: [':busun:bootJar', ':ui:build']) {
    doLast {
        ssh.run {
            session(remotes.brownmun) {
                remove "/srv/http/assets"
                put from: new File(project(':ui').buildDir, "production"), into: "/srv/http"
                executeSudo "mv /srv/http/production /srv/http/assets"
                executeSudo "chgrp -R nginx /srv/http/assets"

                put from: project(':busun').tasks['bootJar'].archivePath, into: "/srv/busun/busun.jar"
                execute 'chgrp busun /srv/busun/busun.jar'
                executeSudo 'systemctl restart busun'
            }
        }
    }
}

task printVersion {
    doLast {
        println project.version
    }
}
