buildscript {
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.+"
        classpath "com.netflix.nebula:nebula-project-plugin:5.1.2"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE'
        classpath 'com.google.guava:guava:26.0-jre'
    }

    repositories {
        maven {url "https://plugins.gradle.org/m2/"}
        jcenter()
        mavenCentral()
    }
}

allprojects {
    group = 'org.brownmun'
    version = System.getenv('TRAVIS') ? System.getenv('TRAVIS_BUILD_NUMBER') : 'dev'

    apply plugin: 'idea'
    apply plugin: 'jacoco'
    apply plugin: 'com.github.ben-manes.versions'

    repositories {
        jcenter()
        mavenCentral()
    }
}

task coverage(type: JacocoReport) {
    reports {
        html {
            destination file("$buildDir/reports/coverage")
        }
    }
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
}

task check(dependsOn: [testReport, coverage]) {}

configure([project(':core'), project(':busun'), project(':bucs')]) {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencyManagement {
        dependencies {
            dependency 'com.google.guava:guava:26.0-jre'
            dependency 'org.apache.commons:commons-lang3:3.6'

            dependency 'org.apache.poi:poi-ooxml:3.17'

            // Use Thymeleaf 3
            dependencySet(group: 'org.thymeleaf', version: '3.0.8.RELEASE') {
                entry 'thymeleaf'
                entry 'thymeleaf-spring4'
            }

            // Override Spring Boot's Thymeleaf dialect versions
            dependency 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.2.2'
            dependency 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4:3.0.2.RELEASE'

            dependencySet(group: 'org.testcontainers', version: '1.1.6') {
                entry 'postgresql'
                entry 'jdbc'
                entry 'testcontainers'
            }
        }
    }

    dependencies {
        compile 'com.google.guava:guava'
        compile 'org.apache.commons:commons-lang3'
    }

    bootRun {
        workingDir rootProject.projectDir

        addResources = true

        systemProperty 'debug', 'true'
        def platformProfile =  System.getenv('TRAVIS') ? 'ci' : 'local'
        systemProperty 'spring.profiles.active', "${platformProfile},dev-assets"
    }

    rootProject.tasks['coverage'].configure {
        sourceSets sourceSets.main
    }

    tasks.withType(Test) {
        rootProject.tasks['coverage'].executionData it
        rootProject.tasks['testReport'].reportOn it
    }

    tasks.withType(JavaCompile) {
//        options.compilerArgs = ['--add-modules', 'java.xml.bind', '--release', '8']
//        options.compilerArgs = ['--release', '8']
    }
}
